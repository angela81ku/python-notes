# Python shell
Alt + p (Ctrl + p on MAC) : Repeated the latest command line
Alt + n (Ctrl + n on MAC) : Repeated the next command line
TAB : automatically complete the command

# print 相關處理
print(1,2,3,'apple’,sep=’-’,end=’\n\n)
print(1,2,3,'apple’,sep=’-’)
result: 
1-2-3-apple

1-2-3-apple
sep : 表示用-的分隔符號
end : 表示最後用什麼的方式處理，\n是換行的意思 \n\n換兩行
注意一個反斜線盡量不要亂用，常會跟系統內建用法衝突
打兩個反斜線\\會視為一個\當作字元輸出
\t包含前面的字空8格(做文字輸出的對齊)
print("姓名\t座號\t分數\n王小明\t20\t40\n鄭小勳\t21\t100")
或是
print("姓名","座號","分數",sep="\t")
print("王小明","20","40",sep="\t")
print("鄭小勳","21","100",sep="\t")

>>>Result:
姓名		座號		分數
王小明		20		40
鄭小勳		21		100

#  Input 輸入提示
objectname=int(input(“Please input your name: ”))
“Please input your name: ” This is a prompt for the user.
int: 將型態轉換成int否則預設input為字串
a=”111”
b=”2”
a+b=”1112”
eval:可以將各式的str轉為原來型態(除非電腦無法辨識)，但是在伺服器上使用，會使使用者有機會竊取資料，只能在單機上使用

#Rules for Python variables:
Style:
1.  Don't use chinese to name the variable. 
2.  Don't use the built-in function's name.
3.  book_title
    bookTitle  :cameltype (However, the cameltype might not be used in other language)
    sbookTitle : Hungarian notation
technical    
1.  Don't use number as the first figure
2.  Variable names are case-sensitive
3.  use del to del wrongly named object

# Assignment
you can easily assign two or more things in one ling and exchange x and y by the following
x,y=1,2
x,y=y,x
>>> result
x=2
y=1

#operator
Arithmetic operator
https://www.tutorialspoint.com/python/python_basic_operators.htm
** : Exponent
// : Floor Division - The division of operands where the result is the quotient in which the digits after the decimal point are removed. But if one of the operands is negative, the result is floored, i.e., rounded away from zero (towards negative infinity)
%  : Divides left hand operand by right hand operand and returns remainder
digit pull out 
ex: 1234 addup all the digits
n=1234
print(n//1000+n//100%10+n//10%10+n//1%10)
beaware that the > < == of the str, though the str has int inside, it 

Comparison Operators
!= : If values of two operands are not equal, then condition becomes true.
== : If the values of two operands are equal, then the condition becomes true.
also python can do this (which can't be done in other language such as c)
integer = 7
print( 5 < integer <= 10) 
>>> True

Other Operators
style:
1. Don't use ; to write your code, because it's difficult to read and debug

# Built-in module
import built-in module
help(math)
You can see what's inside the math and what method you can use.

